@page "/login"
@using ObituaryApp.Blazor.Models
@using ObituaryApp.Blazor.Services
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Login</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow">
                <div class="card-body">
                    <div class="text-center mb-4">
                        <i class="bi bi-person-circle" style="font-size: 3rem; color: #0d6efd;"></i>
                        <h2 class="card-title mt-2">Login</h2>
                        <p class="text-muted">Sign in to your account</p>
                    </div>

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @errorMessage
                        </div>
                    }

                    <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="alert alert-danger" />

                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-envelope"></i>
                                </span>
                                <InputText id="email" class="form-control" @bind-Value="loginModel.Email" 
                                         placeholder="Enter your email" />
                            </div>
                            <ValidationMessage For="@(() => loginModel.Email)" />
                        </div>

                        <div class="mb-4">
                            <label for="password" class="form-label">Password</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-lock"></i>
                                </span>
                                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" 
                                         placeholder="Enter your password" />
                            </div>
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" disabled="@isLoggingIn">
                                @if (isLoggingIn)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                    <text>Signing in...</text>
                                }
                                else
                                {
                                    <i class="bi bi-box-arrow-in-right me-2"></i>
                                    <text>Sign In</text>
                                }
                            </button>
                        </div>
                    </EditForm>

                    <div class="text-center mt-4">
                        <p class="mb-0">Don't have an account? <a href="/register" class="text-decoration-none">Sign up here</a></p>
                    </div>

                    <hr class="my-4">
                    
                    <div class="text-center">
                        <h6 class="text-muted">Demo Accounts</h6>
                        <div class="row">
                            <div class="col-6">
                                <button class="btn btn-outline-secondary btn-sm w-100" @onclick="() => FillDemoAccount(true)">
                                    Admin Account
                                </button>
                            </div>
                            <div class="col-6">
                                <button class="btn btn-outline-secondary btn-sm w-100" @onclick="() => FillDemoAccount(false)">
                                    User Account
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginRequest loginModel = new();
    private string errorMessage = string.Empty;
    private bool isLoggingIn = false;

    protected override async Task OnInitializedAsync()
    {
        // Check if user is already authenticated
        var isAuthenticated = await AuthService.IsAuthenticatedAsync();
        if (isAuthenticated)
        {
            Navigation.NavigateTo("/obituaries");
        }
    }

    private async Task HandleLogin()
    {
        isLoggingIn = true;
        errorMessage = string.Empty;

        try
        {
            var result = await AuthService.LoginAsync(loginModel);
            
            if (result != null)
            {
                Navigation.NavigateTo("/obituaries");
            }
            else
            {
                errorMessage = "Invalid email or password. Please try again. If the API is not running, authentication will not work.";
            }
        }
        catch (UnauthorizedAccessException)
        {
            errorMessage = "Invalid email or password. Please try again.";
        }
        catch (HttpRequestException)
        {
            errorMessage = "Unable to connect to the authentication service. Please ensure the API is running and try again.";
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Login error: {ex.Message}");
            errorMessage = "An error occurred during login. Please try again later.";
        }
        finally
        {
            isLoggingIn = false;
        }
    }

    private void FillDemoAccount(bool isAdmin)
    {
        if (isAdmin)
        {
            loginModel.Email = "aa@aa.aa";
            loginModel.Password = "P@$$w0rd";
        }
        else
        {
            loginModel.Email = "uu@uu.uu";
            loginModel.Password = "P@$$w0rd";
        }
        StateHasChanged();
    }
}