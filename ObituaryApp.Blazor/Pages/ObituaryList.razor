@page "/obituaries"
@using ObituaryApp.Blazor.Models
@using ObituaryApp.Blazor.Services
@inject IObituaryService ObituaryService
@inject NavigationManager Navigation

<PageTitle>Obituaries</PageTitle>

<div class="container mt-4">
    @if (showApiWarning)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i>
            <strong>Note:</strong> The API is not currently available. Displaying sample data for demonstration purposes.
            <button type="button" class="btn-close" @onclick="() => showApiWarning = false" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>Obituaries</h1>
                <a href="/obituaries/create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Add Obituary
                </a>
            </div>

            <!-- Search Bar -->
            <div class="mb-4">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search obituaries by name..." 
                           @bind="searchTerm" @bind:event="oninput" @onkeypress="HandleKeyPress" />
                    <button class="btn btn-outline-secondary" @onclick="SearchObituaries">
                        <i class="bi bi-search"></i> Search
                    </button>
                    <button class="btn btn-outline-secondary" @onclick="ClearSearch">
                        <i class="bi bi-x-circle"></i> Clear
                    </button>
                </div>
            </div>

            @if (loading)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else if (obituaries == null || !obituaries.Any())
            {
                <div class="alert alert-info text-center">
                    <h4>No obituaries found</h4>
                    <p>@(string.IsNullOrEmpty(searchTerm) ? "There are no obituaries to display." : $"No obituaries found matching '{searchTerm}'.")</p>
                </div>
            }
            else
            {
                <div class="row">
                    @foreach (var obituary in obituaries)
                    {
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="card h-100">
                                @if (!string.IsNullOrEmpty(obituary.PhotoDataUrl))
                                {
                                    <img src="@obituary.PhotoDataUrl" class="card-img-top" style="height: 200px; object-fit: cover;" alt="@obituary.FullName" />
                                }
                                else
                                {
                                    <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                        <i class="bi bi-person-circle" style="font-size: 3rem; color: #6c757d;"></i>
                                    </div>
                                }
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@obituary.FullName</h5>
                                    <p class="card-text text-muted">
                                        @if (obituary.DateOfBirth.HasValue && obituary.DateOfDeath.HasValue)
                                        {
                                            @obituary.DateOfBirth.Value.ToString("MMM dd, yyyy") <text> - </text> @obituary.DateOfDeath.Value.ToString("MMM dd, yyyy")
                                        }
                                        else if (obituary.DateOfBirth.HasValue)
                                        {
                                            <text>Born: </text>@obituary.DateOfBirth.Value.ToString("MMM dd, yyyy")
                                        }
                                        else if (obituary.DateOfDeath.HasValue)
                                        {
                                            <text>Died: </text>@obituary.DateOfDeath.Value.ToString("MMM dd, yyyy")
                                        }
                                    </p>
                                    @if (!string.IsNullOrEmpty(obituary.Biography))
                                    {
                                        <p class="card-text">
                                            @(obituary.Biography.Length > 100 ? obituary.Biography.Substring(0, 100) + "..." : obituary.Biography)
                                        </p>
                                    }
                                    <div class="mt-auto">
                                        <a href="/obituaries/@obituary.Id" class="btn btn-outline-primary btn-sm">View Details</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<Obituary> obituaries = new();
    private List<Obituary> allObituaries = new();
    private string searchTerm = string.Empty;
    private bool loading = true;
    private bool showApiWarning = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadObituaries();
    }

    private async Task LoadObituaries()
    {
        loading = true;
        try
        {
            allObituaries = await ObituaryService.GetAllObituariesAsync();
            obituaries = allObituaries;
            
            // Show warning if we're displaying mock data (API not available)
            if (allObituaries.Any() && allObituaries.First().Id <= 3) // Mock data has IDs 1-3
            {
                showApiWarning = true;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading obituaries: {ex.Message}");
            showApiWarning = true;
        }
        finally
        {
            loading = false;
        }
    }

    private void SearchObituaries()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            obituaries = allObituaries;
        }
        else
        {
            obituaries = allObituaries.Where(o => o.FullName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();
        }
        StateHasChanged();
    }

    private void ClearSearch()
    {
        searchTerm = string.Empty;
        obituaries = allObituaries;
        StateHasChanged();
    }

    private void HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            SearchObituaries();
        }
    }
}