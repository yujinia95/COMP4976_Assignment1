@model ObivtuaryMvcApi.Models.Obituary

@{
    ViewData["Title"] = $"Memorial - {Model.FullName}";
}

<div class="container-fluid">
    <div class="row">
        <!-- Photo Section -->
        <div class="col-lg-4 col-md-5">
            <div class="card shadow-sm">
                @if (Model.Photo != null)
                {
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Photo)" 
                         class="card-img-top" alt="@Model.FullName" style="height: 400px; object-fit: cover;">
                }
                else
                {
                    <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 400px;">
                        <i class="bi bi-person-heart display-1 text-muted"></i>
                    </div>
                }
                
                <div class="card-body text-center">
                    <h3 class="card-title mb-3">@Model.FullName</h3>
                    <p class="card-text">
                        <i class="bi bi-calendar-heart text-primary"></i>
                        <strong>@Model.DateOfBirth.ToString("MMMM dd, yyyy")</strong>
                        <br />
                        <small class="text-muted">to</small>
                        <br />
                        <strong>@Model.DateOfDeath.ToString("MMMM dd, yyyy")</strong>
                    </p>
                    
                    @{
                        var age = Model.DateOfDeath.Year - Model.DateOfBirth.Year;
                        if (Model.DateOfDeath.DayOfYear < Model.DateOfBirth.DayOfYear) age--;
                    }
                    
                    <p class="text-muted">
                        <small>Age: @age years</small>
                    </p>
                </div>
            </div>
            
            <!-- Action Buttons -->
            <div class="mt-3 d-grid gap-2">
                @if (User.IsInRole("Admin") || 
                     (User.Identity != null && User.Identity.IsAuthenticated && 
                      User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.CreatedByUserId))
                {
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary">
                        <i class="bi bi-pencil"></i> Edit Memorial
                    </a>
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-outline-danger">
                        <i class="bi bi-trash"></i> Delete Memorial
                    </a>
                }
                
                <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Back to Memorial Gallery
                </a>
            </div>
        </div>
        
        <!-- Biography Section -->
        <div class="col-lg-8 col-md-7">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light">
                    <h4 class="mb-0">
                        <i class="bi bi-book text-primary"></i> Life Story
                    </h4>
                </div>
                <div class="card-body">
                    <div class="biography-content">
                        @Html.Raw(Html.Encode(Model.Biography).Replace("\n", "<br />"))
                    </div>
                </div>
                
                <div class="card-footer bg-light">
                    <div class="row text-muted">
                        <div class="col-md-6">
                            <small>
                                <i class="bi bi-clock"></i>
                                Memorial created: @Model.CreatedAt.ToString("MMMM dd, yyyy 'at' h:mm tt")
                            </small>
                        </div>
                        @if (Model.UpdatedAt != Model.CreatedAt)
                        {
                            <div class="col-md-6">
                                <small>
                                    <i class="bi bi-pencil-square"></i>
                                    Last updated: @Model.UpdatedAt.ToString("MMMM dd, yyyy 'at' h:mm tt")
                                </small>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Add smooth scrolling for better UX
        document.addEventListener('DOMContentLoaded', function() {
            // Add some nice animations
            const cards = document.querySelectorAll('.card');
            cards.forEach(card => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                card.style.transition = 'all 0.5s ease-in-out';
                
                setTimeout(() => {
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, 100);
            });
        });
    </script>
}

<style>
    .biography-content {
        font-size: 1.1rem;
        line-height: 1.8;
        text-align: justify;
        max-height: 400px;
        overflow-y: auto;
        padding-right: 10px;
    }
    
    .biography-content::-webkit-scrollbar {
        width: 6px;
    }
    
    .biography-content::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }
    
    .biography-content::-webkit-scrollbar-thumb {
        background: #888;
        border-radius: 10px;
    }
    
    .biography-content::-webkit-scrollbar-thumb:hover {
        background: #555;
    }
</style>